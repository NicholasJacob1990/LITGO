# ===================================================================
# LITGO5 - Configuração de Variáveis de Ambiente
# ===================================================================
# Copie este arquivo para .env e preencha com seus valores reais
# cp env.example .env

# ===================================================================
# SUPABASE - Banco de Dados PostgreSQL
# ===================================================================
# URL do seu projeto Supabase (encontrada no dashboard)
SUPABASE_URL=https://xxx.supabase.co

# Chave de serviço (service_role) - NUNCA compartilhe esta chave
# Encontrada em: Settings > API > service_role secret
SUPABASE_SERVICE_KEY=eyJ...

# Chave anônima pública (pode ser exposta no frontend)
# Encontrada em: Settings > API > anon public
EXPO_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# ===================================================================
# INTELIGÊNCIA ARTIFICIAL - APIs de LLM
# ===================================================================
# Anthropic Claude - Para triagem e explicações
# Obtenha em: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-...

# OpenAI - Para embeddings e processamento
# Obtenha em: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-...

# ===================================================================
# REDIS - Cache e Filas de Processamento
# ===================================================================
# URL do Redis para Celery e cache
# Local: redis://localhost:6379/0
# Produção: redis://usuario:senha@host:port/db
REDIS_URL=redis://localhost:6379/0

# ===================================================================
# API BACKEND - Configurações do Servidor
# ===================================================================
# URL da API para o frontend consumir
# Desenvolvimento: http://127.0.0.1:8000/api
# Produção: https://api.seudominio.com/api
EXPO_PUBLIC_API_URL=http://127.0.0.1:8000/api

# ===================================================================
# AMBIENTE E CONFIGURAÇÕES
# ===================================================================
# Ambiente de execução (development, staging, production)
ENVIRONMENT=development

# Modo de teste (true para testes automatizados)
TESTING=false

# ===================================================================
# GOOGLE CALENDAR - Integração (Opcional)
# ===================================================================
# Credenciais OAuth2 do Google Cloud Console
# Obtenha em: https://console.cloud.google.com/apis/credentials
EXPO_PUBLIC_GOOGLE_IOS_CLIENT_ID=your-ios-client-id.apps.googleusercontent.com
EXPO_PUBLIC_GOOGLE_ANDROID_CLIENT_ID=your-android-client-id.apps.googleusercontent.com
EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID=your-web-client-id.apps.googleusercontent.com
GOOGLE_WEB_CLIENT_SECRET=GOCSPX-your-web-client-secret

# ===================================================================
# PRODUÇÃO - Configurações Específicas
# ===================================================================
# URL do frontend em produção (para CORS)
FRONTEND_URL=http://localhost:3000

# Configurações de segurança
JWT_SECRET=your-super-secret-jwt-key
CORS_ORIGINS=https://app.seudominio.com,https://www.seudominio.com

# ===================================================================
# MONITORAMENTO E LOGS (Opcional)
# ===================================================================
# Sentry para tracking de erros
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# LogLevel (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# ===================================================================
# EXPO - Configurações do App Mobile
# ===================================================================
# Project ID do EAS (Expo Application Services)
EAS_PROJECT_ID=your-eas-project-id

# Configurações de notificação push
EXPO_PUSH_TOKEN=ExponentPushToken[your-token-here]

# ===================================================================
# INSTRUÇÕES DE CONFIGURAÇÃO
# ===================================================================
# 1. Crie conta no Supabase (https://supabase.com)
# 2. Crie projeto e copie URL + chaves
# 3. Ative extensão pgvector no SQL Editor:
#    CREATE EXTENSION IF NOT EXISTS vector;
# 4. Execute migrações em supabase/migrations/
# 5. Configure Redis local ou use serviço na nuvem
# 6. Obtenha chaves da Anthropic e OpenAI
# 7. Configure Google OAuth2 se usar calendário
# 8. Teste conexões com: npm run dev (frontend) e uvicorn backend.main:app --reload (backend)

# ===================================================================
# EXEMPLO DE VALORES PARA DESENVOLVIMENTO LOCAL
# ===================================================================
# SUPABASE_URL=https://abcdefghijklmnop.supabase.co
# SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFiY2RlZmdoaWprbG1ub3AiLCJyb2xlIjoic2VydmljZV9yb2xlIiwiaWF0IjoxNjQwOTk1MjAwLCJleHAiOjE5NTY1NzEyMDB9.example
# EXPO_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFiY2RlZmdoaWprbG1ub3AiLCJyb2xlIjoiYW5vbiIsImlhdCI6MTY0MDk5NTIwMCwiZXhwIjoxOTU2NTcxMjAwfQ.example
# ANTHROPIC_API_KEY=sk-ant-api03-1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef12
# OPENAI_API_KEY=sk-1234567890abcdef1234567890abcdef1234567890abcdef12
# REDIS_URL=redis://localhost:6379/0
# EXPO_PUBLIC_API_URL=http://127.0.0.1:8000/api

# API do Jusbrasil (substitui DataJud)
JUS_API_URL="https://api.jusbrasil.com.br/v2"
JUS_API_TOKEN="seu_token_de_api_aqui"

# OneSignal para Notificações Push
ONESIGNAL_APP_ID="seu_app_id_do_onesignal"
ONESIGNAL_API_KEY="sua_api_key_do_onesignal"

# =============================================================================
# CONFIGURAÇÃO DE AMBIENTE - LITGO5
# =============================================================================
# Copie este arquivo para .env e configure as variáveis conforme necessário
# NUNCA commite o arquivo .env real - ele contém informações sensíveis

# =============================================================================
# SUPABASE - Banco de dados e autenticação
# =============================================================================
# URL do projeto Supabase (encontre em: Project Settings > API)
EXPO_PUBLIC_SUPABASE_URL=https://seu-projeto.supabase.co

# Chave pública anônima do Supabase (encontre em: Project Settings > API > anon public)
EXPO_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# Chave de serviço do Supabase (APENAS PARA BACKEND - Project Settings > API > service_role)
# ⚠️  NUNCA exponha esta chave no frontend!
SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# =============================================================================
# ANTHROPIC CLAUDE - IA para triagem e análise
# =============================================================================
# Chave da API Anthropic (obtenha em: https://console.anthropic.com/)
ANTHROPIC_API_KEY=sk-ant-...

# =============================================================================
# OPENAI - Embeddings e processamento de texto
# =============================================================================
# Chave da API OpenAI (obtenha em: https://platform.openai.com/api-keys)
OPENAI_API_KEY=sk-...

# =============================================================================
# REDIS - Cache e filas de processamento
# =============================================================================
# URL do Redis (local ou serviço como Upstash)
REDIS_URL=redis://localhost:6379
# Ou para Upstash: redis://default:password@region.upstash.io:port

# =============================================================================
# JUSBRASIL API - Dados jurídicos e processos
# =============================================================================
# URL base da API Jusbrasil PRO
JUS_API_URL=https://api.jusbrasil.com.br/v2

# Token de autenticação Jusbrasil PRO
JUS_API_TOKEN=seu_token_jusbrasil_aqui

# =============================================================================
# ONESIGNAL - Notificações push
# =============================================================================
# App ID do OneSignal (encontre em: Settings > Keys & IDs)
ONESIGNAL_APP_ID=seu-app-id-onesignal

# Chave da API REST do OneSignal (encontre em: Settings > Keys & IDs)
ONESIGNAL_API_KEY=sua-api-key-onesignal

# =============================================================================
# DAILY.CO - Videochamadas
# =============================================================================
# Chave da API Daily.co (obtenha em: https://dashboard.daily.co/developers)
EXPO_PUBLIC_DAILY_API_KEY=sua-api-key-daily-co

# =============================================================================
# GOOGLE CALENDAR - Integração de agenda (OPCIONAL)
# =============================================================================
# Client ID para iOS (Google Cloud Console > Credentials)
GOOGLE_IOS_CLIENT_ID=123456789-abcdef.apps.googleusercontent.com

# Client ID para Web (Google Cloud Console > Credentials)
GOOGLE_WEB_CLIENT_ID=123456789-abcdef.apps.googleusercontent.com

# Client Secret para Web (Google Cloud Console > Credentials)
GOOGLE_WEB_CLIENT_SECRET=GOCSPX-abcdef123456

# =============================================================================
# CONFIGURAÇÕES DO AMBIENTE
# =============================================================================
# Ambiente atual: development, staging, production
ENVIRONMENT=development

# URL base da API (para produção, use seu domínio)
API_BASE_URL=http://localhost:8000

# =============================================================================
# CONFIGURAÇÕES DE DEBUG E LOGS
# =============================================================================
# Nível de log: error, warn, info, debug
LOG_LEVEL=info

# Habilitar logs detalhados (true/false)
DEBUG_MODE=false

# =============================================================================
# CONFIGURAÇÕES DE RATE LIMITING
# =============================================================================
# Limite de requisições por minuto por IP
RATE_LIMIT_PER_MINUTE=100

# Limite de requisições por hora por usuário
RATE_LIMIT_PER_HOUR=1000

# =============================================================================
# CONFIGURAÇÕES DE UPLOAD
# =============================================================================
# Tamanho máximo de arquivo em MB
MAX_FILE_SIZE_MB=10

# Tipos de arquivo permitidos (separados por vírgula)
ALLOWED_FILE_TYPES=pdf,doc,docx,jpg,jpeg,png

# =============================================================================
# CONFIGURAÇÕES DE EMAIL (OPCIONAL - para notificações)
# =============================================================================
# Provedor de email (smtp, sendgrid, etc.)
EMAIL_PROVIDER=smtp

# Configurações SMTP (se usando SMTP)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=seu-email@gmail.com
SMTP_PASS=sua-senha-app

# =============================================================================
# CONFIGURAÇÕES DE MONITORAMENTO (OPCIONAL)
# =============================================================================
# Sentry DSN para monitoramento de erros
SENTRY_DSN=https://your-dsn@sentry.io/project-id

# =============================================================================
# INSTRUÇÕES DE CONFIGURAÇÃO
# =============================================================================
# 
# 1. SUPABASE:
#    - Crie um projeto em https://supabase.com
#    - Execute as migrações: npx supabase migration up
#    - Configure RLS e políticas de segurança
#
# 2. ANTHROPIC:
#    - Crie conta em https://console.anthropic.com/
#    - Gere uma API key
#    - Configure billing se necessário
#
# 3. OPENAI:
#    - Crie conta em https://platform.openai.com/
#    - Gere uma API key
#    - Configure billing e limites
#
# 4. REDIS:
#    - Local: instale Redis localmente
#    - Produção: use Upstash, Redis Cloud ou similar
#
# 5. JUSBRASIL:
#    - Contrate plano PRO da Jusbrasil
#    - Obtenha token de API
#
# 6. ONESIGNAL:
#    - Crie app em https://onesignal.com
#    - Configure para React Native
#
# 7. DAILY.CO:
#    - Crie conta em https://daily.co
#    - Obtenha API key no dashboard
#    - Configure domínio se necessário
#
# 8. GOOGLE CALENDAR (Opcional):
#    - Configure projeto no Google Cloud Console
#    - Habilite Calendar API
#    - Crie credenciais OAuth 2.0
#
# =============================================================================
# VERIFICAÇÃO DE CONFIGURAÇÃO
# =============================================================================
# Para verificar se tudo está configurado corretamente:
# 
# 1. Execute: npm run dev
# 2. Verifique logs de inicialização
# 3. Teste funcionalidades básicas:
#    - Autenticação
#    - Triagem de casos
#    - Notificações
#    - Videochamadas
#
# =============================================================================

# DocuSign Integration
USE_DOCUSIGN=false
DOCUSIGN_BASE_URL=https://demo.docusign.net
DOCUSIGN_API_KEY=your_integration_key_here
DOCUSIGN_ACCOUNT_ID=your_account_id_here
DOCUSIGN_USER_ID=your_user_id_here
DOCUSIGN_PRIVATE_KEY=your_private_key_here

# Celery
CELERY_BROKER_URL=redis://localhost:6379
CELERY_RESULT_BACKEND=redis://localhost:6379

# Jusbrasil
JUSBRASIL_API_URL=https://api.jusbrasil.com.br
JUSBRASIL_API_TOKEN=your_token_here 